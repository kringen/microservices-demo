version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: microservices-rabbitmq
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - microservices-net

  api-server:
    build:
      context: .
      dockerfile: api-server/Dockerfile
    container_name: microservices-api-server
    ports:
      - "8081:8081"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - GIN_MODE=release
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - microservices-net

  # Ollama AI Server for research agent
  ollama:
    image: ollama/ollama:latest
    container_name: microservices-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
    restart: unless-stopped
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "sh", "-c", "ollama list | grep -q llama3.2"]
      interval: 30s
      timeout: 10s
      retries: 8
      start_period: 180s

  # Model initialization service
  ollama-init:
    image: ollama/ollama:latest
    container_name: microservices-ollama-init
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=http://ollama:11434
    depends_on:
      - ollama
    networks:
      - microservices-net
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "echo 'Waiting for Ollama server to be ready...' &&
      sleep 20 &&
      echo 'Pulling llama3.2 model...' &&
      ollama pull llama3.2 &&
      echo 'Model download complete!'"
    restart: "no"

  # AI Research Agent (formerly job-runner)
  research-agent:
    build:
      context: .
      dockerfile: job-runner/Dockerfile
    container_name: microservices-research-agent
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=llama3.2
      - DAPR_HTTP_ENDPOINT=http://localhost:3500
    depends_on:
      rabbitmq:
        condition: service_healthy
      ollama:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - microservices-net

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: microservices-frontend
    ports:
      - "8080:8080"
    environment:
      - API_SERVER_URL=http://api-server:8081
      - GIN_MODE=release
    depends_on:
      - api-server
    restart: unless-stopped
    networks:
      - microservices-net

volumes:
  rabbitmq_data:
  ollama_data:

networks:
  microservices-net:
    driver: bridge
