apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-files-server
  namespace: microservices-demo
  labels:
    app.kubernetes.io/name: microservices-demo
    app.kubernetes.io/component: mcp-files-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: microservices-demo
      app.kubernetes.io/component: mcp-files-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: microservices-demo
        app.kubernetes.io/component: mcp-files-server
    spec:
      containers:
        - name: mcp-files-server
          image: mcp-files-server:latest  # Your MCP files server image
          ports:
            - containerPort: 3003
          env:
            - name: PORT
              value: "3003"
            - name: FILES_ROOT_PATH
              value: "/data"
            - name: ALLOWED_EXTENSIONS
              value: ".md,.txt,.go,.js,.py,.yaml,.json"
          volumeMounts:
            - name: files-storage
              mountPath: /data
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 3003
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: 3003
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: files-storage
          persistentVolumeClaim:
            claimName: mcp-files-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-files-service
  namespace: microservices-demo
  labels:
    app.kubernetes.io/name: microservices-demo
    app.kubernetes.io/component: mcp-files-server
spec:
  ports:
    - port: 3003
      targetPort: 3003
      protocol: TCP
  selector:
    app.kubernetes.io/name: microservices-demo
    app.kubernetes.io/component: mcp-files-server
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mcp-files-pvc
  namespace: microservices-demo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
