apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-storage
  namespace: microservices-demo
  labels:
    app.kubernetes.io/name: microservices-demo
    app.kubernetes.io/component: rabbitmq
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: nfs-client  # Using available storage class
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: microservices-demo
  labels:
    app.kubernetes.io/name: microservices-demo
    app.kubernetes.io/component: rabbitmq
    app.kubernetes.io/version: "3.12"
spec:
  replicas: 1
  strategy:
    type: Recreate  # RabbitMQ needs consistent storage
  selector:
    matchLabels:
      app.kubernetes.io/name: microservices-demo
      app.kubernetes.io/component: rabbitmq
  template:
    metadata:
      labels:
        app.kubernetes.io/name: microservices-demo
        app.kubernetes.io/component: rabbitmq
        app.kubernetes.io/version: "3.12"
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.12-management
          ports:
            - name: amqp
              containerPort: 5672
              protocol: TCP
            - name: management
              containerPort: 15672
              protocol: TCP
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: username
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: password
          volumeMounts:
            - name: rabbitmq-storage
              mountPath: /var/lib/rabbitmq
          livenessProbe:
            exec:
              command:
                - rabbitmq-diagnostics
                - ping
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - rabbitmq-diagnostics
                - check_port_connectivity
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: rabbitmq-storage
          persistentVolumeClaim:
            claimName: rabbitmq-storage
